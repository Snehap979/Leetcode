/**
 * @param {number[]} nums1
 * @param {number[]} nums2
 * @param {number[]} nums3
 * @return {number[]}
 */
var twoOutOfThree = function(nums1, nums2, nums3) {
   nums1=[...new Set(nums1)]
nums2=[...new Set(nums2)]
nums3=[...new Set(nums3)]
let n=Math.max(nums1.length,nums2.length,nums3.length)
let map1=new Map()
let finalArray=[]
for(let i=0;i<n;i++)
{
  if(nums1[i]!=undefined)
  {
     if(map1.get(nums1[i])==undefined)
      {
        map1.set(nums1[i],1)
      }
      else
      {
        let count=map1.get(nums1[i])
        map1.set(nums1[i],count+1)
      }
  }
  if(nums2[i]!=undefined)
  {
    if(map1.get(nums2[i])==undefined)
      {
        map1.set(nums2[i],1)
      }
      else
      {
        let count=map1.get(nums2[i])
        map1.set(nums2[i],count+1)
      }
  }
  if(nums3[i]!=undefined)
  {
    if(map1.get(nums3[i])==undefined)
      {
        map1.set(nums3[i],1)
      }
      else
      {
        let count=map1.get(nums3[i])
        map1.set(nums3[i],count+1)
      }
  }
     
}
for(const[key,value]of map1)
{
  if(value>=2)
  {
    finalArray.push(key)
  }
}
return finalArray
};
